package ${packageName}.serviceImpl.${prefix};

import ${packageName}.dao.${prefix}.${tableName}Mapper;
import ${packageName}.domain.${prefix}.${tableName};
import ${packageName}.domain.base.PageRequest;
import ${packageName}.domain.base.PageResult;
import ${packageName}.infrastructure.mybatis.PageUtil;
import ${packageName}.infrastructure.mybatis.SqlUtil;
import ${packageName}.service.${prefix}.${tableName}Service;
import com.github.pagehelper.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import tk.mybatis.mapper.entity.Example;

import java.util.Arrays;
import java.util.List;

@Service
public class ${tableName}ServiceImpl implements ${tableName}Service {

    @Autowired
        ${tableName}Mapper ${exampleName}Mapper;

    @Override
    public int add${tableName}(${tableName} ${exampleName}) {

        return ${exampleName}Mapper.insert(${exampleName});
    }

    @Override
    public int update${tableName}(${tableName} ${exampleName}) {
        return ${exampleName}Mapper.updateByPrimaryKeySelective(${exampleName});
    }

    @Override
    public int del${tableName}(String id) {
        return ${exampleName}Mapper.deleteByPrimaryKey(id);
    }

    @Override
    public int del${tableName}List(String ids) {
        String[] idArray = ids.split(",");
        Example example = new Example(${tableName}. class);
        example.createCriteria().andIn("id", Arrays.asList(idArray));
        return ${exampleName}Mapper.deleteByExample(example)
    }

    ;
}

    @Override
    public ${tableName} get${tableName}(String id) {
        return ${exampleName}Mapper.selectByPrimaryKey(id);
    }

    @Override
    public List<${tableName}> get${tableName}List(String keyword) {
        keyword = SqlUtil.likeEscapeH(keyword);
        return ${exampleName}Mapper.get${tableName}List(keyword);
    }

    @Override
    public PageResult<${tableName}> get${tableName}PageList(String keyword, PageRequest pageRequest) {
        Page<?> page = PageUtil.startPageAllowNull(pageRequest.getPageNum(), pageRequest.getPageSize());
        return new PageResult<>(get${tableName}List(keyword), page.getTotal());
    }
}